- @page_title = "Comments"

.row-fluid
  = render :partial => "/gluttonberg/admin/content/main/sidebar"
  .span9
    .row-fluid
      .page-header
        %h1
          = @page_title
      .subnav
        - if action_name != "index"
          = sub_nav do
            = nav_link("Pending (#{Gluttonberg::Comment.pending_comments_count})", admin_pending_comments_path)
            = nav_link("Approved (#{Gluttonberg::Comment.approved_comments_count})", admin_approved_comments_path)
            = nav_link("Rejected (#{Gluttonberg::Comment.rejected_comments_count})", admin_rejected_comments_path)
            = nav_link("Spam (#{Gluttonberg::Comment.spam_comments_count})", admin_spam_comments_path)


      - if @comments.empty?
        %p.empty No Comments
      - else
        %table{:cellpadding => 0, :cellspacing => 0, :summary => "Articles" , :class => "table table-bordered "}
          %thead
            %tr
              %th
                Author
              %th
                Comment
              %th
                Date Commented
              %th.controls
                Controls
          %tbody
            - @comments.each do |comment|
              %tr
                %td{:style => "width:15%;"}
                  = comment.author_name
                %td{:style => "width:50%;"}
                  = simple_format(comment.body)
                %td{:style => "width:10%;"}
                  = comment.created_at
                %td.controls{:style => "width:20%;"}
                  .btn-group
                    %a{ :class => "btn dropdown-toggle" , "data-toggle" => "dropdown" , :href => "#"}
                      Actions
                      %span.caret
                    %ul.dropdown-menu

                      - if comment.moderation_required && can?(:moderate , Gluttonberg::Comment)
                        %li= link_to("Approve", admin_comment_moderation_path(comment, :moderation => "approve"), :class => "")
                        %li= link_to( "Disapprove", admin_comment_moderation_path(comment, :moderation => "disapprove") , :class => "")
                      - elsif can?(:moderate , Gluttonberg::Comment)
                        - if comment.approved == true
                          %li= link_to( "Disapprove", admin_comment_moderation_path(comment, :moderation => "disapprove") , :class => "btn")
                        - else
                          %li= link_to("Approve", admin_comment_moderation_path(comment, :moderation => "approve"), :class => "")
                      %li.divider
                      %li.danger= link_to("Delete", admin_comment_delete_path(comment), :class => "")
        = will_paginate(@comments)